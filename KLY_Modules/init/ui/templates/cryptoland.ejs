<head>

    <title>Apollo</title>
  
</head>
  
<link rel="stylesheet" href="/style/cyberpunk.css">  
<link rel="stylesheet" href="/style/start.css">

<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,700,1,0" />
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Major+Mono+Display&display=swap" rel="stylesheet">
<link rel="shrotcut icon" href="https://www.gitbook.com/cdn-cgi/image/width=40,height=40,fit=contain,dpr=1,format=auto/https%3A%2F%2F2736040151-files.gitbook.io%2F~%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FMlYPneLIcqHH1EOMSnny%252Ficon%252FR2CyiT04r15Bm7iCl3ij%252F%25D0%2591%25D0%25B5%25D0%25B7%2520%25D0%25BD%25D0%25B0%25D0%25B7%25D0%25B2%25D0%25B0%25D0%25BD%25D0%25B8%25D1%258F.jfif%3Falt%3Dmedia%26token%3Da1d0edc5-cfcc-4300-b1d6-d9712d23172d">
    
  
<section class="cyberpunk" id="main" style="height:200%">
      
    <a href="#">
        <span class="material-symbols-outlined" id="theme-id">nightlight</span>
    </a>
    
    <br/><br/>
    
    <a href="#">
        <span class="material-symbols-outlined" id="fullscreen">desktop_windows</span>
    </a>

    <br/><br/>

    <a href="/">
        <span class="material-symbols-outlined">home</span>
    </a>

    
    <div align="center">

        <h1 class="cyberpunk glitched futfont">Choose what you want to do</h1>
        <h3 class="cyberpunk futfont">You can discover all the available crypto specific features here</h3><br/><br/><br/>

    </div>
   

    <label for="scope_selector" class="cyberpunk futfont" style="font-weight:bold;">
        Choose the scope
    </label><br/><br/>

    <select class="cyberpunk futfont land" id="scope_selector" style="max-width: 500px">

    <!-- SUPPORTED FORMATS WILL BE PASTED HERE  -->

    </select><br/><br/><br/><br/>

    
    <label for="operation_selector" class="cyberpunk futfont" style="font-weight:bold;">
        Choose operation
    </label><br/><br/>
    <select class="cyberpunk futfont land" id="operation_selector" style="max-width: 500px">

            <!-- SUPPORTED FORMATS WILL BE PASTED HERE  -->
    
    </select>
    
    <br/><br/><br/><br/>


    <label for="params" class="cyberpunk futfont" style="font-weight:bold;" id="params_label" hidden>
        Add parameters
    </label><br/><br/>
    <!-- <textarea class="cyberpunk" id="parameters" placeholder="paste parameters here..."></textarea>

    <br/><br/><br/> -->
    <div id="params">

    </div>
  
    <button class="cyberpunk2077 blue-kly" onClick="generateKeyPair()">Let's do it</button>

  
    <p style="bottom: 8%; left: 3%;" id="version">Apollo  v0.2.0</p>

  
  </section>
  
  <!--
  
  ███████╗ ██████╗██████╗ ██╗██████╗ ████████╗███████╗
  ██╔════╝██╔════╝██╔══██╗██║██╔══██╗╚══██╔══╝██╔════╝
  ███████╗██║     ██████╔╝██║██████╔╝   ██║   ███████╗
  ╚════██║██║     ██╔══██╗██║██╔═══╝    ██║   ╚════██║
  ███████║╚██████╗██║  ██║██║██║        ██║   ███████║
  ╚══════╝ ╚═════╝╚═╝  ╚═╝╚═╝╚═╝        ╚═╝   ╚══════╝
                                                       -->
  
<script src="/scripts/upitems.js"></script>

<script>

    let cryptoland={

        encryption:{

            encrypt:param=>{

                if(param==='prompt'){

                    let params=document.getElementById('params')

                    let privateKey=document.createElement('input')

                    privateKey.type="text"
                    privateKey.className="cyberpunk"
                    privateKey.placeholder="Your generated private key"


                    let password=document.createElement('input')

                    password.type="text"
                    password.placeholder="Your password for AES-256"
                    password.className="cyberpunk"

                    params.appendChild(privateKey)
                    params.appendChild(password)


                }else{
                    //Logic after button clicked
                }
                 
            },
            decrypt:param=>{


                 if(param==='prompt'){

                    let params=document.getElementById('params')

                    let cipherTextOfPrivate=document.createElement('input')

                    cipherTextOfPrivate.type="text"
                    cipherTextOfPrivate.className="cyberpunk"
                    cipherTextOfPrivate.placeholder="Ciphertext of your private key"

                    let password=document.createElement('input')

                    password.type="text"
                    password.placeholder="Your password for AES-256"
                    password.className="cyberpunk"

                    params.appendChild(cipherTextOfPrivate)
                    params.appendChild(password)


                }else{
                    //Logic after button clicked
                }
                

            }
        
        },

        default_signatures:{
            
            sign:param=>{

            },
            verify:param=>{}
        
        },
        
        multisig:{
            generate:param=>{

                document.getElementById('params_label').innerHTML='no params needed,just press the button 🚀'

            },
            sign:param=>{},
            verify:param=>{}
        },
        
        ringsig:{
            generate:param=>{

                document.getElementById('params_label').innerHTML='no params needed,just press the button 🚀'

            },
            sign:param=>{},
            verify:param=>{}
        },
        
        thresholdsig:{
            generate:param=>{
                document.getElementById('params_label').innerHTML='no params needed,just press the button 🚀'
            },
            sign:param=>{},
            verify:param=>{}
        },
        
        post_quantum:{
            generate:param=>{
                document.getElementById('params_label').innerHTML='no params needed,just press the button 🚀'
            },
            sign:param=>{},
            verify:param=>{}
        }
    
    }


    //Fill the selectors
    let scopeSelector=document.getElementById('scope_selector')

    let operationSelector=document.getElementById('operation_selector')


    // SET PROMPT
    let newbiew=document.createElement('option')

    newbiew.value=""
    newbiew.disabled=true
    newbiew.selected=true
    newbiew.hidden=true
    newbiew.innerHTML='Press here'

    scopeSelector.appendChild(newbiew)
//___________________________________________


    //FIll the selector to allow you to choose everything you need
    Object.keys(cryptoland).forEach(scope=>{

        let newbiew=document.createElement('option')

        newbiew.innerHTML=scope

        scopeSelector.appendChild(newbiew)


    })


    //Set handler for change events of scope
    document.getElementById('scope_selector').addEventListener('change',()=>{

        //Get the value of scope
        let scopeSelectorValue=document.getElementById('scope_selector').value

        //Get node to fill it
        let operationSelector=document.getElementById('operation_selector')

        
        operationSelector.replaceChildren()

        // SET PROMPT
        let newbiew=document.createElement('option')

        newbiew.value=""
        newbiew.disabled=true
        newbiew.selected=true
        newbiew.hidden=true
        newbiew.innerHTML='now choose operation'

        operationSelector.appendChild(newbiew)
        //___________________________________________

        //FIll the selector to allow you to choose everything you need
        Object.keys(cryptoland[scopeSelectorValue]).forEach(func=>{

            let newbiew=document.createElement('option')

            newbiew.innerHTML=func

            operationSelector.appendChild(newbiew)

        })


    })


    //Set handler to change events of scope
    document.getElementById('operation_selector').addEventListener('change',()=>{


        document.getElementById('params').replaceChildren()

        //Get the value of scope
        let scopeSelectorValue=document.getElementById('scope_selector').value

        //Get the operation
        let operationSelector=document.getElementById('operation_selector').value

        cryptoland[scopeSelectorValue][operationSelector]('prompt')

        document.getElementById('params_label').hidden = false

    })
    


</script>