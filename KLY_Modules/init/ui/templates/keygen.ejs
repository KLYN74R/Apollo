<head>

    <title>Apollo</title>
    <meta id="settings" content="<%=settings%>"/>
    <meta content="<%=token%>"/>

</head>
  
<link rel="stylesheet" href="/style/cyberpunk.css">  
<link rel="stylesheet" href="/style/start.css">
<link rel="stylesheet" href="/style/loader.css">


<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,700,1,0" />
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Major+Mono+Display&display=swap" rel="stylesheet">
<link rel="shrotcut icon" href="https://www.gitbook.com/cdn-cgi/image/width=40,height=40,fit=contain,dpr=1,format=auto/https%3A%2F%2F2736040151-files.gitbook.io%2F~%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FMlYPneLIcqHH1EOMSnny%252Ficon%252FR2CyiT04r15Bm7iCl3ij%252F%25D0%2591%25D0%25B5%25D0%25B7%2520%25D0%25BD%25D0%25B0%25D0%25B7%25D0%25B2%25D0%25B0%25D0%25BD%25D0%25B8%25D1%258F.jfif%3Falt%3Dmedia%26token%3Da1d0edc5-cfcc-4300-b1d6-d9712d23172d">
    
  
<section class="cyberpunk" id="main">
      
    <a href="#">
        <span class="material-symbols-outlined" id="theme-id">nightlight</span>
    </a>
    
    <br/><br/>
    
    <a href="#">
        <span class="material-symbols-outlined" id="fullscreen">desktop_windows</span>
    </a>

    <br/><br/>

    <a href="/">
        <span class="material-symbols-outlined">home</span>
    </a>

    
    <div align="center" id="general">

        <h1 class="cyberpunk glitched futfont">Choose the keytype</h1>
        <h5 class="cyberpunk glitched futfont">We allow you to generate different formats</h5><br/><br/><br/>
        
        <select class="cyberpunk futfont" id="key_selector" style="max-width: 500px">

            <!-- SUPPORTED FORMATS WILL BE PASTED HERE  -->

        </select><br/><br/>
        
        <div id="hodler">
        
            <input class="cyberpunk futfont" type="checkbox" id="shouldstore" onClick="changeExplain()"/>

            <label for="shouldstore" class="cyberpunk" id="checkboxExplain" style="font-size: large;">
                Store keypair to KEYSTORE(Current: <b>NO</b>,generated keys won't be stored)
            </label><br/>

            <div id="inner_hodler">
                <!-- Container for alias -->
            </div>

        </div>

        <br/><br/>
        <button class="cyberpunk2077" href="/start" onClick="generateKeyPair()">Generate</button>

        <br/><br/><br/><br/>

        <!-- Result -->

        <p class="futfont" style="font-weight:bold">Result(will be below):</p>

        <div id="res_hodler">

            <p style="font-weight:bold;font-size: larger;" id="result"></p>
            
        </div>
    
        <br/>

    </div>
  
    <p id="version">Apollo v0.2.0</p>

  </section>
  
  <!--
  
  ███████╗ ██████╗██████╗ ██╗██████╗ ████████╗███████╗
  ██╔════╝██╔════╝██╔══██╗██║██╔══██╗╚══██╔══╝██╔════╝
  ███████╗██║     ██████╔╝██║██████╔╝   ██║   ███████╗
  ╚════██║██║     ██╔══██╗██║██╔═══╝    ██║   ╚════██║
  ███████║╚██████╗██║  ██║██║██║        ██║   ███████║
  ╚══════╝ ╚═════╝╚═╝  ╚═╝╚═╝╚═╝        ╚═╝   ╚══════╝
                                                       -->

                                                       


<script src="/scripts/upitems.js"></script>
<script src="/scripts/no_self_xss.js"></script>

<script>
    

    //Create values for selectors with keytypes supported by Klyntar & Apollo

    let keySelector=document.getElementById('key_selector')

    let formats=[

        'klyntar',          'algorand',
        'arweave',          'binance_chain',
        'bitcoin',          'cosmos',
        'eos',              'eth_like',
        'filecoin',         'polkadot',
        'harmony',          'helium',
        'mina',             'xrp',
        'solana',           'stellar',
        'zilliqa',          'terra',
        'dfinity',          'kusama',
        'substrate format', 'ton'
    
    ]
    
    
    formats.forEach(format=>{

        let newbiew=document.createElement('option')

        newbiew.innerHTML=format

        keySelector.appendChild(newbiew)

    })





    let generateKeyPair=async()=>{

        //Run loader
        let block=document.getElementById('res_hodler'),

            loader=document.createElement('div')

        loader.className="lds-dual-ring"

        let previouslyGenerated=document.getElementById('generated')

        //if it's first time-we don't have output element,so use .appendChild(),otherwise-use .replaceChild()
        
        previouslyGenerated ? block.replaceChild(loader,previouslyGenerated) : block.appendChild(loader)

        // <div align="center" class="lds-dual-ring"></div>


        let generated=document.createElement('p')

        generated.id='generated'

        generated.style="font-weight:bold;"

        generated.innerHTML=JSON.stringify(
            
            await fetch(`/key_generate/${document.getElementById('key_selector').value}/${document.getElementById('shouldstore').checked}/${document.getElementById('alias')?.value || 1337}`)
            
            .then(r=>r.json()).catch(e=>'😕Some error occured'),null,3)


            
        block.replaceChildren()
        block.appendChild(generated)

    }



    let changeExplain=()=>{

        let lable=document.getElementById('checkboxExplain'),
        
            isChecked=document.getElementById('shouldstore').checked


        lable.innerHTML=`Store keypair to KEYSTORE(Current: ${isChecked?"<b>YES</b>,Apollo will store all generated keys":"<b>NO</b>,generated keys won't be stored"})`


        //Main block
        let hodler=document.getElementById('inner_hodler')

        if(isChecked){

            let aliasField=document.createElement('input')

            aliasField.type="text"
            aliasField.className="cyberpunk"
            aliasField.placeholder="Enter alias for your keypair"
            aliasField.id="alias"
            aliasField.style="max-width: 500px"


            //Add some <br> firstly
            hodler.appendChild(document.createElement('br'))
            hodler.appendChild(document.createElement('br'))

            hodler.appendChild(aliasField)

        }
        else hodler.replaceChildren()

    }
    




</script>